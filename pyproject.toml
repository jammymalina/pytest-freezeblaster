[tool.poetry]
name = "pytest-freezeblaster"
version = "0.1.0"
description = "Wrap tests with fixtures in freeze_time"
authors = ["Jakub Jantosik <jakub.jantosik@gmail.com>"]
readme = "README.md"
classifiers = ["Framework :: Pytest"]

[project.entry-points.pytest11]
freezeblaster = "pytest_freezeblaster"

[tool.poetry.dependencies]
python = "^3.8"
pytest = ">=6.2.5"
freezegun = "^1.5.1"

[tool.poetry.group.dev.dependencies]
black = "^24.4.2"
isort = "^5.13.2"
pylint = "^3.2.5"
mypy = "^1.10.1"

[tool.black]
line-length = 120
target-version = ["py38", "py39", "py310", "py311", "py312"]
include = "\\.pyi?$"

[tool.isort]
profile = "black"
known_first_party = ["hdp_aws_auth"]

[tool.pylint]
disable = [
  "C0301", # Line too long (108/100) (line-too-long)
  "C0114", # Missing module docstring (missing-module-docstring)
  "C0115", # Missing class docstring (missing-class-docstring)
  "C0116", # Missing function or method docstring (missing-function-docstring)
]

[tool.mypy]
ignore_missing_imports = true

[tool.poetry.plugins.pytest11]
freezeblaster = "pytest_freezeblaster"

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"
